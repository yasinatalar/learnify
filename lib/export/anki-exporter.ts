import JSZip from 'jszip'

export interface AnkiCard {
  id: string
  question: string
  answer: string
  explanation?: string
  tags: string[]
  difficulty: string
}

export interface AnkiDeck {
  name: string
  description?: string
  cards: AnkiCard[]
  metadata?: {
    created: string
    version: string
    cardCount: number
  }
}

class AnkiExporter {
  /**
   * Generate Anki deck package (.apkg file)
   * This creates a simplified version - for full Anki compatibility,
   * you'd need to implement the full Anki database format
   */
  async generateAnkiPackage(deck: AnkiDeck): Promise<Blob> {
    const zip = new JSZip()
    
    // Create deck metadata
    const deckInfo = {
      name: deck.name,
      description: deck.description || '',
      created: deck.metadata?.created || new Date().toISOString(),
      cardCount: deck.cards.length,
      version: '1.0.0'
    }
    
    // Add deck info
    zip.file('deck.json', JSON.stringify(deckInfo, null, 2))
    
    // Create CSV format for easy import
    const csvContent = this.generateCSV(deck.cards)
    zip.file('cards.csv', csvContent)
    
    // Create text format
    const textContent = this.generateTextFormat(deck.cards)
    zip.file('cards.txt', textContent)
    
    // Add README with import instructions
    const readme = this.generateReadme(deck.name)
    zip.file('README.md', readme)
    
    // Generate the zip file
    const blob = await zip.generateAsync({ type: 'blob' })
    return blob
  }
  
  /**
   * Generate CSV format for Anki import
   */
  private generateCSV(cards: AnkiCard[]): string {
    const headers = ['Question', 'Answer', 'Explanation', 'Tags', 'Difficulty']
    const rows = [headers.join(',')]
    
    cards.forEach(card => {
      const row = [
        this.escapeCSV(card.question),
        this.escapeCSV(card.answer),
        this.escapeCSV(card.explanation || ''),
        this.escapeCSV(card.tags.join('; ')),
        this.escapeCSV(card.difficulty)
      ]
      rows.push(row.join(','))
    })
    
    return rows.join('\n')
  }
  
  /**
   * Generate text format for manual import
   */
  private generateTextFormat(cards: AnkiCard[]): string {
    return cards.map(card => {
      let text = `Q: ${card.question}\n`
      text += `A: ${card.answer}\n`
      
      if (card.explanation) {
        text += `Explanation: ${card.explanation}\n`
      }
      
      if (card.tags.length > 0) {
        text += `Tags: ${card.tags.join(', ')}\n`
      }
      
      text += `Difficulty: ${card.difficulty}\n`
      text += '\n---\n\n'
      
      return text
    }).join('')
  }
  
  /**
   * Generate README with import instructions
   */
  private generateReadme(deckName: string): string {
    return `# ${deckName} - Anki Import

This package contains flashcards exported from LearnifyAI in multiple formats for easy import into Anki.

## Files Included

- \`cards.csv\` - CSV format for direct import into Anki
- \`cards.txt\` - Text format for manual review
- \`deck.json\` - Metadata about the deck

## How to Import into Anki

### Method 1: CSV Import (Recommended)
1. Open Anki
2. Go to File → Import
3. Select the \`cards.csv\` file
4. Choose "Import" and map the fields:
   - Field 1 → Front
   - Field 2 → Back
   - Field 3 → Extra (optional)
   - Field 4 → Tags
5. Click Import

### Method 2: Manual Import
1. Create a new deck in Anki
2. Open the \`cards.txt\` file
3. Copy and paste each card manually

## Field Mapping
- **Question**: The front of the flashcard
- **Answer**: The back of the flashcard
- **Explanation**: Additional context (optional)
- **Tags**: Categories for organization
- **Difficulty**: Learning difficulty level

## Tips
- Review the cards before importing
- Adjust the card template in Anki if needed
- Use tags to organize related cards

Generated by LearnifyAI on ${new Date().toLocaleDateString()}
`
  }
  
  /**
   * Escape CSV values
   */
  private escapeCSV(value: string): string {
    if (value.includes(',') || value.includes('"') || value.includes('\n')) {
      return `"${value.replace(/"/g, '""')}"`
    }
    return value
  }
  
  /**
   * Convert flashcards from database format to Anki format
   */
  convertFlashcardsToAnki(flashcards: any[], deckName: string): AnkiDeck {
    const cards: AnkiCard[] = flashcards.map(fc => ({
      id: fc.id,
      question: fc.question,
      answer: fc.answer,
      explanation: fc.explanation,
      tags: typeof fc.tags === 'string' ? fc.tags.split(',').map((t: string) => t.trim()).filter((t: string) => t) : fc.tags || [],
      difficulty: fc.difficulty || 'MEDIUM'
    }))
    
    return {
      name: deckName,
      description: `Flashcard deck exported from LearnifyAI containing ${cards.length} cards`,
      cards,
      metadata: {
        created: new Date().toISOString(),
        version: '1.0.0',
        cardCount: cards.length
      }
    }
  }
}

export const ankiExporter = new AnkiExporter()